input = "13100114.csv",
sep = ",",
header = T,
stringsAsFactors = T,
verbose = T
)
life_expectancy <-
data.table::fread(
input = "13100114.csv",
sep = ",",
header = T,
stringsAsFactors = T,
verbose = T,
data.table = F
)
life_expectancy<-as_tibble(life_expectancy)
life_expectancy
life_expectancy <- life_expectancy %<% select(REF_DATE, GEO, `Age group`, Sex, Element, VALUE)
life_expectancy <- life_expectancy %>% select(REF_DATE, GEO, `Age group`, Sex, Element, VALUE)
life_expectancy
life_expectancy <-
data.table::fread(
input = "13100114.csv",
sep = ",",
header = T,
stringsAsFactors = T,
verbose = T,
data.table = F,
select = c(REF_DATE, GEO, `Age group`, Sex, Element, VALUE)
)
life_expectancy <-
data.table::fread(
input = "13100114.csv",
sep = ",",
header = T,
stringsAsFactors = T,
verbose = T,
data.table = F,
select = c("REF_DATE", "GEO", "Age group", "Sex", "Element", "VALUE")
)
life_expectancy
life_expectancy <- as_tibble(life_expectancy)
life_expectancy
life_expectancy <- life_expectancy %>% select( Element == "Life expectancy (in years) at age x (ex)" )
life_expectancy <- life_expectancy %>% select( "Element" == "Life expectancy (in years) at age x (ex)" )
life_expectancy <- life_expectancy %>% filter( "Element" == "Life expectancy (in years) at age x (ex)" )
life_expectancy
life_expectancy <-
data.table::fread(
input = "13100114.csv",
sep = ",",
header = T,
stringsAsFactors = T,
verbose = T,
data.table = F,
select = c("REF_DATE", "GEO", "Age group", "Sex", "Element", "VALUE")
)
life_expectancy <- as_tibble(life_expectancy)
life_expectancy %>% filter( "Element" == "Life expectancy (in years) at age x (ex)" )
life_expectancy %>% filter( "Element" == "Life expectancy (in years) at age x (ex)" )
life_expectancy %>% filter( Element == "Life expectancy (in years) at age x (ex)" )
life_expectancy %>% filter( `Age group` == "0 years" & Element == "Life expectancy (in years) at age x (ex)" )
life_expectancy <- life_expectancy %>% filter( `Age group` == "0 years" & Element == "Life expectancy (in years) at age x (ex)" )
life_expectancy
life_expectancy %>% select(c(REF_DATE, GEO, Sex, VALUE))
life_expectancy %>% filter(`Age group` == "0 years" &
Element == "Life expectancy (in years) at age x (ex)")
life_expectancy <-
life_expectancy %>%
filter(`Age group` == "0 years" &
Element == "Life expectancy (in years) at age x (ex)") %>%
select(-c(`Age group`, Element))
life_expectancy
ggplot(data=life_expectancy, aes(x=REF_DATE, y= VALUE, color=Sex)) + geom_line()
ggplot(data=life_expectancy, aes(x=REF_DATE, y= VALUE, color=Sex)) + geom_both()
ggplot(data=life_expectancy, aes(x=REF_DATE, y= VALUE, color=Sex)) + geom_point()
ggplot(data=filter(life_expectancy, GEO==Canada), aes(x=REF_DATE, y= VALUE, color=Sex)) + geom_point()
ggplot(data=filter(life_expectancy, GEO=="Canada"), aes(x=REF_DATE, y= VALUE, color=Sex)) + geom_point()
ggplot(data=filter(life_expectancy, GEO=="Canada"), aes(x=REF_DATE, y= VALUE, color=Sex)) + geom_line()
ggplot(data=filter(life_expectancy, GEO=="Canada"), aes(x=REF_DATE, y= VALUE, color=Sex)) + geom_curve()
ggplot(data=filter(life_expectancy, GEO=="Canada"), aes(x=REF_DATE, y= VALUE, color=Sex)) + geom_line()
ggplot(data=filter(life_expectancy, GEO=="Canada"), aes(x=REF_DATE, y= VALUE, color=Sex)) + geom_path()
ggplot(data=filter(life_expectancy, GEO=="Canada"), aes(x=REF_DATE, y= VALUE, color=Sex)) + geom_smooth()
ggplot(data=filter(life_expectancy, GEO=="Canada"), aes(x=REF_DATE, y= VALUE, color=Sex)) + geom_point() +  geom_smooth()
ggplot(data=filter(life_expectancy, GEO=="Canada"), aes(x=REF_DATE, y= VALUE, color=Sex)) + geom_point() +  geom_smooth(method="loess")
ggplot(data=filter(life_expectancy, GEO=="Canada"), aes(x=REF_DATE, y= VALUE, color=Sex)) + geom_step()
ggplot(data=filter(life_expectancy, GEO=="Canada"), aes(x=REF_DATE, y= VALUE, color=Sex)) + geom_path()
ggplot(data=filter(life_expectancy, GEO=="Canada"), aes(x=REF_DATE, y= VALUE, color=Sex)) + geom_point()
life_expectancy$REF_DATE
as.character(life_expectancy$REF_DATE)
substr(as.character(life_expectancy$REF_DATE),1,4)
as.integer( substr(as.character(life_expectancy$REF_DATE),1,4))
life_expectancy$REF_DATE <- as.integer(substr(as.character(life_expectancy$REF_DATE), 1, 4))
ggplot(data = filter(life_expectancy, GEO == "Canada"),
aes(x = REF_DATE, y = VALUE, color = Sex)) + geom_point()
ggplot(data = filter(life_expectancy, GEO == "Canada"),
aes(x = REF_DATE, y = VALUE, color = Sex)) +
geom_point() +
theme_bw()
ggplot(data = filter(life_expectancy, GEO == "Canada"),
aes(x = REF_DATE, y = VALUE, color = Sex)) +
geom_point() + geom_point() +
theme_bw()
ggplot(data = filter(life_expectancy, GEO == "Canada"),
aes(x = REF_DATE, y = VALUE, color = Sex)) +
geom_point() + geom_line() +
theme_bw()
ggplot(data = filter(life_expectancy, GEO == "Canada"),
aes(x = REF_DATE, y = VALUE, color = Sex)) +
geom_line() +
theme_bw()
library(plotly)
ggplotly(ggplot(
data = filter(life_expectancy, GEO == "Canada"),
aes(x = REF_DATE, y = VALUE, color = Sex)
) +
geom_line() +
theme_bw())
ggplotly(ggplot(
data = filter(life_expectancy, GEO == "BC"),
aes(x = REF_DATE, y = VALUE, color = Sex)
) +
geom_line() +
theme_bw())
ggplotly(ggplot(
data = filter(life_expectancy, GEO == "British Columbia"),
aes(x = REF_DATE, y = VALUE, color = Sex)
) +
geom_line() +
theme_bw())
ggplotly(ggplot(
data = filter(life_expectancy, GEO == "British Columbia"),
aes(x = REF_DATE, y = VALUE, color = Sex)
) + scale_fill_manual(values=c("red", "blue", "green")) +
geom_line() +
theme_bw())
ggplotly(ggplot(
data = filter(life_expectancy, GEO == "British Columbia"),
aes(x = REF_DATE, y = VALUE, color = Sex)) +
scale_fill_manual(values = c("red", "purple", "green")) +
geom_line() +
theme_bw())
ggplotly(ggplot(
data = filter(life_expectancy, GEO == "British Columbia"),
aes(x = REF_DATE, y = VALUE, color = Sex)) +
scale_fill_grey()+
geom_line() +
theme_bw())
ggplotly(ggplot(
data = filter(life_expectancy, GEO == "British Columbia"),
aes(x = REF_DATE, y = VALUE, fill = Sex)) +
scale_fill_grey()+
geom_line() +
theme_bw())
ggplotly(ggplot(
data = filter(life_expectancy, GEO == "British Columbia"),
aes(x = REF_DATE, y = VALUE, fill = Sex)) +
scale_fill_manual(values=c("red", "blue", "green"))+
geom_line() +
theme_bw())
ggplotly(ggplot(
data = filter(life_expectancy, GEO == "British Columbia"),
aes(x = REF_DATE, y = VALUE, color = Sex)) +
scale_fill_manual(values=c("red", "blue", "green"))+
geom_line() +
theme_bw())
ggplotly(ggplot(
data = filter(life_expectancy, GEO == "British Columbia"),
aes(x = REF_DATE, y = VALUE, color = Sex)) +
scale_color_manual(values=c("red", "blue", "green"))+
geom_line() +
theme_bw())
ggplotly(ggplot(
data = filter(life_expectancy, GEO == "British Columbia"),
aes(x = REF_DATE, y = VALUE, color = Sex)) +
scale_color_manual(values=c("red", "pink", "green"))+
geom_line() +
theme_bw())
ggplotly(ggplot(
data = filter(life_expectancy, GEO == "British Columbia"),
aes(x = REF_DATE, y = VALUE, color = Sex)) +
scale_color_manual(values=c("red", "pink", "blue"))+
geom_line() +
theme_bw())
ggplotly(ggplot(
data = filter(life_expectancy, GEO == "British Columbia"),
aes(x = REF_DATE, y = VALUE, color = Sex)) +
scale_color_manual(values=c("green", "pink", "blue"))+
geom_line() +
theme_bw())
ggplotly(ggplot(
data = filter(life_expectancy, GEO == "British Columbia"),
aes(x = REF_DATE, y = VALUE, color = Sex)) +
scale_color_manual(values=c("green", "pink", "cyan"))+
geom_line() +
theme_bw())
ggplotly(ggplot(
data = filter(life_expectancy, GEO == "British Columbia"),
aes(x = REF_DATE, y = VALUE, color = Sex)) +
scale_color_manual(values=c("light green", "pink", "cyan"))+
geom_line() +
theme_bw())
ggplotly(ggplot(
data = filter(life_expectancy, GEO == "British Columbia"),
aes(x = REF_DATE, y = VALUE, color = Sex)) +
scale_color_manual(values=c("green", "red", "blue"))+
geom_line() +
theme_bw())
# https://www150.statcan.gc.ca/t1/tbl1/en/tv.action?pid=1310011401
library(tidyverse)
library(data.table)
library(DT)
library(plotly)
life_expectancy <-
data.table::fread(
input = "13100114.csv",
sep = ",",
header = T,
stringsAsFactors = F,
verbose = T,
data.table = F,
select = c("REF_DATE", "GEO", "Age group", "Sex", "Element", "VALUE")
)
life_expectancy <- as_tibble(life_expectancy)
life_expectancy <-
life_expectancy %>%
filter(`Age group` == "0 years" &
Element == "Life expectancy (in years) at age x (ex)") %>%
select(-c(`Age group`, Element))
life_expectancy$REF_DATE <-
as.integer(substr(life_expectancy$REF_DATE, 1, 4))
life_expectancy$VALUE <- as.numeric(life_expectancy$VALUE)
life_expectancy$GEO <- as.factor(life_expectancy$GEO)
life_expectancy$Sex <- as.factor(life_expectancy$Sex)
names(life_expectancy)[2] <- "Region"
summary(life_expectancy)
ggplotly(
ggplot(
data = filter(life_expectancy, Region == "Canada"),
aes(x = REF_DATE, y = VALUE, color = Sex)
) +
scale_color_manual(values = c("green", "red", "blue")) +
geom_line(size = .5) +
theme_bw() +
xlab("Year") +
ylab("Life Expectancy") +
ylim(70, 85) +
ggtitle("Life Expectancy at Birth in Canada",
subtitle = "From https://www150.statcan.gc.ca/t1/tbl1/en/tv.action?pid=1310011401")
)
# ggplotly(
ggplot(data = filter(life_expectancy),
aes(
x = REF_DATE,
y = VALUE,
color = Region,
linetype = Sex
)) +
scale_color_discrete(
name = "Region",
breaks = c(
"Canada",
"British Columbia",
"Alberta",
"Saskatchewan",
"Manitoba",
"Ontario",
"Quebec",
"Nova Scotia",
"New Brunswick",
"Newfoundland and Labrador"
),
labels = c(
"All Canada",
"British Columbia",
"Alberta",
"Saskatchewan",
"Manitoba",
"Ontario",
"Quebec",
"Nova Scotia",
"New Brunswick",
"Newfoundland and Labrador"
)
) +
scale_linetype_discrete(
name = "Gender",
breaks = c("Females", "Males", "Both sexes"),
labels = c("Female", "Male", "Both")
) +
geom_line(size = .5) +
theme_bw() +
xlab("Year") +
ylab("Life Expectancy") +
ylim(70, 85) +
ggtitle("Change in Life Expectancy at Birth in Canada",
subtitle = "From https://www150.statcan.gc.ca/t1/tbl1/en/tv.action?pid=1310011401")
shiny::runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
library(shiny)
library(tidyverse)
library(data.table)
library(plotly)
summary(life_expectancy)
runApp('Course_Project')
shiny::runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
shiny::runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
rm(list = ls())
shiny::runApp('Course_Project')
shiny::runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
?h3
runApp('Course_Project')
runApp('Course_Project')
rm(list = ls())
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
rm(list=ls())
runApp('Course_Project')
runApp('Course_Project')
runApp('Course_Project')
shiny::runApp('Course_Project')
rm(list=ls())
runApp('Course_Project')
life_expectancy <-
data.table::fread(
input = "13100114.csv",
sep = ",",
header = T,
stringsAsFactors = F,
verbose = T,
data.table = F,
select = c("REF_DATE", "GEO", "Age group", "Sex", "Element", "VALUE")
)
life_expectancy <- as_tibble(life_expectancy)
life_expectancy <-
life_expectancy %>%
filter(`Age group` == "0 years" &
Element == "Life expectancy (in years) at age x (ex)") %>%
select(-c(`Age group`, Element))
life_expectancy <-
data.table::fread(
input = "13100114.csv",
sep = ",",
header = T,
stringsAsFactors = F,
verbose = T,
data.table = F,
select = c("REF_DATE", "GEO", "Age group", "Sex", "Element", "VALUE")
)
library(shiny)
library(tidyverse)
library(data.table)
library(plotly)
library(stats)
life_expectancy <-
data.table::fread(
input = "13100114.csv",
sep = ",",
header = T,
stringsAsFactors = F,
verbose = T,
data.table = F,
select = c("REF_DATE", "GEO", "Age group", "Sex", "Element", "VALUE")
)
setwd("~/Dropbox (Central 1)/CourseraDataScience/DevelopingDataProducts/Week4_Project/Course_Project")
life_expectancy <-
data.table::fread(
input = "13100114.csv",
sep = ",",
header = T,
stringsAsFactors = F,
verbose = T,
data.table = F,
select = c("REF_DATE", "GEO", "Age group", "Sex", "Element", "VALUE")
)
life_expectancy <- as_tibble(life_expectancy)
life_expectancy <-
life_expectancy %>%
filter(`Age group` == "0 years" &
Element == "Life expectancy (in years) at age x (ex)") %>%
select(-c(`Age group`, Element))
View(life_expectancy)
View(life_expectancy)
runApp()
```{r echo=FALSE, eval=TRUE}
knitr::opts_chunk$set(echo = FALSE, strip.white=TRUE, tidy=TRUE, message=FALSE, warning=FALSE, error=FALSE)
library(tidyverse)
library(data.table)
library(stats)
life_expectancy <-
data.table::fread(
input = "13100114.csv",
sep = ",",
header = T,
stringsAsFactors = F,
verbose = T,
data.table = F,
select = c("REF_DATE", "GEO", "Age group", "Sex", "Element", "VALUE")
)
life_expectancy <- as_tibble(life_expectancy)
life_expectancy <-
life_expectancy %>%
filter(`Age group` == "0 years" &
Element == "Life expectancy (in years) at age x (ex)") %>%
select(-c(`Age group`, Element))
life_expectancy$REF_DATE <-
as.integer(substr(life_expectancy$REF_DATE, 1, 4))
life_expectancy$VALUE <- as.numeric(life_expectancy$VALUE)
life_expectancy$GEO <- as.factor(life_expectancy$GEO)
life_expectancy$Sex <- as.factor(life_expectancy$Sex)
knitr::opts_chunk$set(echo = FALSE, strip.white=TRUE, tidy=TRUE, message=FALSE, warning=FALSE, error=FALSE, comment=FALSE)
knitr::opts_chunk$set(echo = FALSE, strip.white=TRUE, tidy=TRUE, message=FALSE, warning=FALSE, error=FALSE, comment=FALSE, results = FALSE)
class(input) <- list(list(Region=regions, Gender=genders))
class(input) <- "Input"
ggplot( data = filter( life_expectancy, GEO %in% input$Region & Sex %in% input$Gender ), aes(x = REF_DATE, y = VALUE, color = GEO, linetype = Sex ) )
ggplot( data = filter( life_expectancy, GEO %in% input$Region & Sex %in% input$Gender ),
aes(x = REF_DATE, y = VALUE, color = GEO, linetype = Sex ) ) +
scale_color_discrete(
name = "Region",
breaks = input$Region,
labels = input$Region
) +
scale_linetype_discrete(
name = "Gender",
breaks = input$Gender,
labels = input$Gender
) +
geom_line(size = .5) +
theme_bw() +
xlab("Year") +
ylab("Life Expectancy") +
ylim(70, 85)
```{r echo = TRUE, eval=FALSE}
```{r label=life_expect_plot, echo = TRUE, eval=FALSE}
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, strip.white=TRUE, tidy=TRUE, message=FALSE, warning=FALSE, error=FALSE, comment=FALSE, results = FALSE)
# Chunk 2
library(tidyverse)
library(data.table)
library(stats)
library(shiny)
# Chunk 3
life_expectancy <-
data.table::fread(
input = "13100114.csv",
sep = ",",
header = T,
stringsAsFactors = F,
verbose = T,
data.table = F,
select = c("REF_DATE", "GEO", "Age group", "Sex", "Element", "VALUE")
)
# Chunk 4
life_expectancy <- as_tibble(life_expectancy)
life_expectancy <-
life_expectancy %>% filter(`Age group` == "0 years" &
Element == "Life expectancy (in years) at age x (ex)") %>% select(-c(`Age group`, Element))
life_expectancy$REF_DATE <-
as.integer(substr(life_expectancy$REF_DATE, 1, 4))
life_expectancy$VALUE <- as.numeric(life_expectancy$VALUE)
life_expectancy$GEO <- as.factor(life_expectancy$GEO)
life_expectancy$Sex <- as.factor(life_expectancy$Sex)
# Chunk 5
regions <- c(
"Canada",
"British Columbia",
"Alberta",
"Saskatchewan",
"Manitoba",
"Ontario",
"Quebec",
"Nova Scotia",
"New Brunswick",
"Newfoundland and Labrador"
)
regionLabel<-"Select Region:"
genders <-  c(
"Both" = "Both sexes",
"Female" = "Females",
"Male" = "Males"
)
input <- list(Region=regions, Gender=genders)
class(input) <- "Input"
# Chunk 7: life_expect_plot
